@*@model SassyClub.Models.RegisterViewModel*@
@using SassyClub.Models
@model RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}



@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="bg-white rounded shadow-7 w-400 mw-100 p-6">
        <h5 class="mb-7">Create an account</h5>



        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "ConfirmPassword" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-3">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input">
                <label class="custom-control-label">I agree to the <a class="ml-1" href="@Url.Action("Terms")">terms of service</a></label>
            </div>
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-block btn-primary" value="Register" />
            @*<button class="btn btn-block btn-primary" type="submit">Register</button>*@
        </div>


        <div class="divider">Or Register With</div>
        <div class="text-center">
            <a class="btn btn-circle btn-sm btn-facebook mr-2" href="#"><i class="fa fa-facebook"></i></a>
            <a class="btn btn-circle btn-sm btn-google mr-2" href="#"><i class="fa fa-google"></i></a>
            <a class="btn btn-circle btn-sm btn-twitter" href="#"><i class="fa fa-twitter"></i></a>
        </div>

        <hr class="w-30">

        <p class="text-center text-muted small-2">Already a member? <a href="@Url.Action("Login")">Login here</a></p>
        @*<p class="text-center text-muted small-2">Already a member? <a href="user-login.html">Login here</a></p>*@
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   
}
@*


        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
